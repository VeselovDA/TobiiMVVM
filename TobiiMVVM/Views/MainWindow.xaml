<Window x:Class="TobiiMVVM.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TobiiMVVM.Views"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
        xmlns:tobii="clr-namespace:Tobii.Interaction.Wpf;assembly=Tobii.Interaction.Net"
        xmlns:models="clr-namespace:TobiiMVVM.Models"
        mc:Ignorable="d"
        Title="Манипулятор" 
        IsEnabled="{Binding Path=IsEnabled}"
        WindowState="Maximized"
        Height="650" Width="960"
        MinHeight="650" MinWidth="960"   
        Icon="Images/letGo.png"
        
        >
    <Window.Resources>
        <Style  x:Key="ButtonControl" TargetType="{x:Type Button}">
            <Setter Property="IsEnabled" Value="False"/>
            <Setter Property="Background" Value="#444444"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate  TargetType="{x:Type Button}" >
                        <Border CornerRadius="15" Background="{TemplateBinding Background}"
                                BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="tobii:Behaviors.HasGaze" Value="True">

                    <Setter Property="Background"  >
                        <Setter.Value>
                            <RadialGradientBrush>
                                <GradientStop Color="#FFD4E2D9" Offset="0.679"/>
                                <GradientStop Color="#FF05D058" Offset="1"/>
                            </RadialGradientBrush>
                        </Setter.Value>
                    </Setter>


                </Trigger>

            </Style.Triggers>
        </Style>
        <ControlTemplate x:Key="ButtonImage" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger  Property="tobii:Behaviors.HasGaze" Value="True">
                    <Setter Property="Background" TargetName="border" >
                        <Setter.Value>
                            <RadialGradientBrush>

                                <GradientStop Color="#FF08FF6D" Offset="0.35"/>
                                <GradientStop Color="#00FFFFFF" Offset="1"/>

                            </RadialGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" TargetName="border" >
                        <Setter.Value>
                            <RadialGradientBrush>
                                <GradientStop Color="#ff000010" Offset="0"/>
                                <GradientStop Color="#FF08FF6D" Offset="-1"/>
                            </RadialGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded" >
            <i:InvokeCommandAction Command="{Binding Load}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <DockPanel Background="#FF5B6060">
        <!--Меню -->
        <Grid DockPanel.Dock="Top">
            <Menu DockPanel.Dock="Top"  Background="#00FFFFFF" Margin="0,0,0,10" Foreground="AliceBlue">
                <MenuItem x:Name="MenuCalibration" Header="Калибровка"  Command="{Binding Сalibration}" />
                <MenuItem x:Name="MenuSetting" Header="Настройки" Command="{Binding OpenSetting}"  />


                <MenuItem x:Name="MenuHelp" Header="Помощь"  >
                    <MenuItem  x:Name="MenuHelpINST" Header="Инструкция " Foreground="Black"  Command="{Binding OpenManual}"/>
                    <MenuItem  x:Name="MenuHelpAUTHOR" Header="Об авторах" Command="{Binding AboutAuthors}" Foreground="Black"/>
                </MenuItem>
            </Menu>

        </Grid>
        <!--Подвал -->

        <!-- <ProgressBar DockPanel.Dock="Bottom" Value="69" Height="20" ></ProgressBar>-->
        <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom">
            <Label  Content="{Binding Path=CheckCameras}"/>
            <Label DockPanel.Dock="Bottom" Content="{Binding Path=CheckConection}"/>
        </StackPanel>
       

        <!--Основная часть -->
        <Grid>
        <Grid Visibility="{Binding Path=VisibilityCamerasGrid}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="83*"/>
                    <RowDefinition Height="113*"/>
                    <RowDefinition Height="87*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="355*"/>
                    <ColumnDefinition Width="122*"/>
                    <ColumnDefinition Width="125*"/>
                    <ColumnDefinition Width="352*"/>
                </Grid.ColumnDefinitions>

                <Button Grid.Column="1" Grid.ColumnSpan="2"
                       Margin="10"
                        tobii:Behaviors.IsGazeAware="True"
                     tobii:Behaviors.GazeAwareMode="Delayed"
                     tobii:Behaviors.GazeAwareDelayTime="2000"
                     Content="Назад"
                     Style="{DynamicResource ButtonControl}"
                     HorizontalAlignment="Stretch"  VerticalAlignment="Stretch">
                    <i:Interaction.Triggers>
                        <models:RoutedEventTrigger RoutedEvent= "tobii:Behaviors.HasGazeChanged">
                            <i:InvokeCommandAction Command="{Binding BackToControll}"/>
                        </models:RoutedEventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <Image HorizontalAlignment="Stretch" Margin="0,10,30,0"  VerticalAlignment="Stretch" Grid.Column="0" Source="{Binding Camera1}" Grid.ColumnSpan="2" Grid.Row="1"/>
                <Image HorizontalAlignment="Stretch" Margin="30,10,0,0"  VerticalAlignment="Stretch" Grid.Column="2" Source="{Binding Camera2}" Grid.ColumnSpan="2" Grid.Row="1"/>
                <Button  tobii:Behaviors.IsGazeAware="True"
                tobii:Behaviors.GazeAwareMode="Delayed"
                tobii:Behaviors.GazeAwareDelayTime="1000"     Grid.Row="2"
                         Grid.ColumnSpan="4"
                Template="{DynamicResource ButtonImage}"
                Style="{DynamicResource ButtonControl}"
            >
                    <i:Interaction.Triggers>
                        <models:RoutedEventTrigger RoutedEvent= "tobii:Behaviors.HasGazeChanged">
                            <i:InvokeCommandAction Command="{Binding ResetMove}"/>
                        </models:RoutedEventTrigger>
                    </i:Interaction.Triggers>


                    <Image   x:Name="imageReset"  Source="Images/reset.png"></Image>

                </Button>
            </Grid>


            <Grid Visibility="{Binding VisibilityMainGrid}" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>

                <!--   Показать камеры-->
                <Button tobii:Behaviors.IsGazeAware="True"
                     tobii:Behaviors.GazeAwareMode="Delayed"
                     tobii:Behaviors.GazeAwareDelayTime="2000"
                     Content="Show cameras" Grid.Column="1"     Grid.Row="1"  Margin="10"     
                         Style="{DynamicResource ButtonControl}"
            >
                    <i:Interaction.Triggers>
                        <models:RoutedEventTrigger RoutedEvent= "tobii:Behaviors.HasGazeChanged">
                            <i:InvokeCommandAction Command="{Binding ShowCamera}"/>
                        </models:RoutedEventTrigger>
                    </i:Interaction.Triggers>






                </Button>


                <!--Захватить-->
                <Button  tobii:Behaviors.IsGazeAware="True"
                tobii:Behaviors.GazeAwareMode="Delayed"
                tobii:Behaviors.GazeAwareDelayTime="1000"
                Grid.Column="0"     Grid.Row="0" Margin="10"
                Template="{DynamicResource ButtonImage}"
                Style="{DynamicResource ButtonControl}"
            >
                    <i:Interaction.Triggers>
                        <models:RoutedEventTrigger RoutedEvent= "tobii:Behaviors.HasGazeChanged">
                            <i:InvokeCommandAction Command="{Binding TakeMove}"/>
                        </models:RoutedEventTrigger>
                    </i:Interaction.Triggers>
                    <Grid>
                        <Image   x:Name="imageTake" Source="Images/take.png" Visibility="{Binding VisibilityTakeImage}"/>

                        <Image  Source="{Binding Camera1}" Margin="25" Visibility="{Binding VisibilityTake}"/>

                    </Grid>
                </Button>

                <!--Влево-->
                <Button  tobii:Behaviors.IsGazeAware="True"
                tobii:Behaviors.GazeAwareMode="Delayed"
                tobii:Behaviors.GazeAwareDelayTime="1000"
                Grid.Column="0"     Grid.Row="1"  Margin="10"    
                         Style="{DynamicResource ButtonControl}"
            >
                    <i:Interaction.Triggers>
                        <models:RoutedEventTrigger RoutedEvent= "tobii:Behaviors.HasGazeChanged">
                            <i:InvokeCommandAction Command="{Binding RightMove}"/>
                        </models:RoutedEventTrigger>
                    </i:Interaction.Triggers>
                    <Image  Source="{Binding Camera1}" Margin="25" />
                </Button>

                <!--Отпустить-->
                <Button  tobii:Behaviors.IsGazeAware="True"
                tobii:Behaviors.GazeAwareMode="Delayed"
                tobii:Behaviors.GazeAwareDelayTime="1000"
                Grid.Column="0"     Grid.Row="2"  Margin="10"
                Template="{DynamicResource ButtonImage}"
                Style="{DynamicResource ButtonControl}"
            >
                    <i:Interaction.Triggers>
                        <models:RoutedEventTrigger RoutedEvent= "tobii:Behaviors.HasGazeChanged">
                            <i:InvokeCommandAction Command="{Binding LetGoMove}"/>
                        </models:RoutedEventTrigger>
                    </i:Interaction.Triggers>
                    <Grid>
                        <Image   x:Name="imageLetGo" Source="Images/letGo.png" Visibility="{Binding VisibilityLetGoImage}"/>

                        <Image  Source="{Binding Camera1}" Margin="25" Visibility="{Binding VisibilityLetGo}"/>
                    </Grid>
                </Button>

                <!--Вниз-->
                <Button  tobii:Behaviors.IsGazeAware="True"
                tobii:Behaviors.GazeAwareMode="Delayed"
                tobii:Behaviors.GazeAwareDelayTime="1000"
                Grid.Column="1"     Grid.Row="2"  Margin="10"  
                Style="{DynamicResource ButtonControl}"
            >
                    <i:Interaction.Triggers>
                        <models:RoutedEventTrigger RoutedEvent= "tobii:Behaviors.HasGazeChanged">
                            <i:InvokeCommandAction Command="{Binding DownMove}"/>
                        </models:RoutedEventTrigger>
                    </i:Interaction.Triggers>

                    <Image  Source="{Binding Camera2}" Margin="25" />
                </Button>

                <!--Назад-->
                <Button  tobii:Behaviors.IsGazeAware="True"
                tobii:Behaviors.GazeAwareMode="Delayed"
                tobii:Behaviors.GazeAwareDelayTime="1000"
                Grid.Column="2"     Grid.Row="2"  Margin="10"
                Template="{DynamicResource ButtonImage}"
                Style="{DynamicResource ButtonControl}"
            >
                    <i:Interaction.Triggers>
                        <models:RoutedEventTrigger RoutedEvent= "tobii:Behaviors.HasGazeChanged">
                            <i:InvokeCommandAction Command="{Binding BackMove}"/>
                        </models:RoutedEventTrigger>
                    </i:Interaction.Triggers>
                    <Grid>
                        <Image   x:Name="imageBack" Source="Images/arrows.png" RenderTransformOrigin="0.5,0.5" Visibility="{Binding VisibilityBackImage}">

                            <Image.RenderTransform>
                                <ScaleTransform ScaleY="-1"/>
                            </Image.RenderTransform>
                        </Image>

                        <Image  Source="{Binding Camera2}" Margin="25" Visibility="{Binding VisibilityBack}"/>
                    </Grid>
                </Button>

                <!--Вправо-->
                <Button  tobii:Behaviors.IsGazeAware="True"
                tobii:Behaviors.GazeAwareMode="Delayed"
                tobii:Behaviors.GazeAwareDelayTime="1000"
                 
                
                
                Grid.Column="2"     Grid.Row="1"  Margin="10"  
                Style="{DynamicResource ButtonControl}"
            >
                    <i:Interaction.Triggers>
                        <models:RoutedEventTrigger RoutedEvent= "tobii:Behaviors.HasGazeChanged">
                            <i:InvokeCommandAction Command="{Binding LeftMove}"/>
                        </models:RoutedEventTrigger>
                    </i:Interaction.Triggers>
                    <Image  Source="{Binding Camera1}" Margin="25" />

                </Button>

                <!--Вперед-->
                <Button  tobii:Behaviors.IsGazeAware="True"
                tobii:Behaviors.GazeAwareMode="Delayed"
                tobii:Behaviors.GazeAwareDelayTime="1000"
                Grid.Column="2"     Grid.Row="0"  Margin="10"
                Template="{DynamicResource ButtonImage}" 
                 Style="{DynamicResource ButtonControl}"
            >
                    <i:Interaction.Triggers>
                        <models:RoutedEventTrigger RoutedEvent= "tobii:Behaviors.HasGazeChanged">
                            <i:InvokeCommandAction Command="{Binding FrontMove}"/>
                        </models:RoutedEventTrigger>
                    </i:Interaction.Triggers>
                    <Grid>
                        <Image   x:Name="imageFront" Source="Images/arrows.png" Visibility="{Binding VisibilityFrontImage}"/>

                        <Image  Source="{Binding Camera2}" Margin="25"  Visibility="{Binding VisibilityFront}"/>

                    </Grid>
                </Button>

                <!--Вверх-->
                <Button  tobii:Behaviors.IsGazeAware="True"
                tobii:Behaviors.GazeAwareMode="Delayed"
                tobii:Behaviors.GazeAwareDelayTime="1000"
                Grid.Column="1"     Grid.Row="0"  Margin="10"    
                         Style="{DynamicResource ButtonControl}"
            >

                    <i:Interaction.Triggers>
                        <models:RoutedEventTrigger RoutedEvent= "tobii:Behaviors.HasGazeChanged">
                            <i:InvokeCommandAction Command="{Binding UpMove}"/>
                        </models:RoutedEventTrigger>
                    </i:Interaction.Triggers>
                    <Image  Source="{Binding Camera2}" Margin="25" />

                </Button>


            </Grid>
        </Grid>
    </DockPanel>
</Window>
